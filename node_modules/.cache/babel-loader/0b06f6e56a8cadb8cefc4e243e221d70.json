{"ast":null,"code":"var _jsxFileName = \"/Users/harianshsehgal/Development/weather-today/src/App.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport { SearchBar } from \"./components/searchBar\";\nimport WeatherCard from \"./components/weatherCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [selectedCity, setSelectedCity] = useState(\"moscow\");\n  const [cityWeather, setCityWeather] = useState({\n    location: \"\",\n    temp: 1,\n    feelsLike: 2,\n    humidity: 0,\n    windSpeed: 0,\n    weatherDespcription: \"\",\n    weatherIcon: \"\"\n  });\n\n  const cityDataFetch = async city => {\n    const data = await fetch(`http://api.weatherstack.com/current?access_key=6f607064e89ae54c3a31a50296c0d2fe&query=${city}`);\n    const resp = await data.json();\n    console.log(resp);\n    const respWeather = resp.current;\n    console.log(respWeather); // setCityWeather([resp.current.temperature,resp.current.weather_descriptions[0]])\n\n    setCityWeather({\n      location: resp.location.name,\n      temp: respWeather.temperature,\n      feelsLike: respWeather.feelslike,\n      humidity: respWeather.humidity,\n      windSpeed: respWeather.wind_speed,\n      weatherDespcription: respWeather.weather_descriptions[0],\n      weatherIcon: respWeather.weather_icons[0]\n    });\n    console.log(\"cityWeather\", cityWeather);\n  }; //we get city name from input component and is passed to updateCity function as \"data\"\n\n\n  function updateCity(data) {\n    setSelectedCity(data);\n    cityDataFetch(selectedCity); //fetches weather data from Api for specific city\n\n    console.log(selectedCity);\n    console.log(cityWeather);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      updateCity: updateCity,\n      cityName: selectedCity,\n      setCityName: setSelectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      weatherData: cityWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"weather forcast for \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xQt7DrdjKWwkQa9i9xj59CMeWN4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/harianshsehgal/Development/weather-today/src/App.js"],"names":["react","useState","SearchBar","WeatherCard","App","selectedCity","setSelectedCity","cityWeather","setCityWeather","location","temp","feelsLike","humidity","windSpeed","weatherDespcription","weatherIcon","cityDataFetch","city","data","fetch","resp","json","console","log","respWeather","current","name","temperature","feelslike","wind_speed","weather_descriptions","weather_icons","updateCity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,QAAD,CAAhD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC;AAC7CQ,IAAAA,QAAQ,EAAE,EADmC;AAE7CC,IAAAA,IAAI,EAAE,CAFuC;AAG7CC,IAAAA,SAAS,EAAE,CAHkC;AAI7CC,IAAAA,QAAQ,EAAE,CAJmC;AAK7CC,IAAAA,SAAS,EAAE,CALkC;AAM7CC,IAAAA,mBAAmB,EAAE,EANwB;AAO7CC,IAAAA,WAAW,EAAE;AAPgC,GAAD,CAA9C;;AAUA,QAAMC,aAAa,GAAG,MAAOC,IAAP,IAAgB;AACpC,UAAMC,IAAI,GAAG,MAAMC,KAAK,CACrB,yFAAwFF,IAAK,EADxE,CAAxB;AAGA,UAAMG,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,WAAW,GAAGJ,IAAI,CAACK,OAAzB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ,EAPoC,CASpC;;AACAhB,IAAAA,cAAc,CAAC;AACbC,MAAAA,QAAQ,EAAEW,IAAI,CAACX,QAAL,CAAciB,IADX;AAEbhB,MAAAA,IAAI,EAAEc,WAAW,CAACG,WAFL;AAGbhB,MAAAA,SAAS,EAAEa,WAAW,CAACI,SAHV;AAIbhB,MAAAA,QAAQ,EAAEY,WAAW,CAACZ,QAJT;AAKbC,MAAAA,SAAS,EAAEW,WAAW,CAACK,UALV;AAMbf,MAAAA,mBAAmB,EAAEU,WAAW,CAACM,oBAAZ,CAAiC,CAAjC,CANR;AAObf,MAAAA,WAAW,EAAES,WAAW,CAACO,aAAZ,CAA0B,CAA1B;AAPA,KAAD,CAAd;AASAT,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BhB,WAA3B;AACD,GApBD,CAZa,CAkCb;;;AACA,WAASyB,UAAT,CAAoBd,IAApB,EAA0B;AACxBZ,IAAAA,eAAe,CAACY,IAAD,CAAf;AACAF,IAAAA,aAAa,CAACX,YAAD,CAAb,CAFwB,CAGxB;;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAZ;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEyB,UAAvB;AAAmC,MAAA,QAAQ,EAAE3B,YAA7C;AAA2D,MAAA,WAAW,EAAEC;AAAxE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtDQH,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import react, { useState } from \"react\";\nimport { SearchBar } from \"./components/searchBar\";\nimport WeatherCard from \"./components/weatherCard\";\n\nfunction App() {\n  const [selectedCity, setSelectedCity] = useState(\"moscow\");\n  const [cityWeather, setCityWeather] = useState({\n    location: \"\",\n    temp: 1,\n    feelsLike: 2,\n    humidity: 0,\n    windSpeed: 0,\n    weatherDespcription: \"\",\n    weatherIcon: \"\",\n  });\n\n  const cityDataFetch = async (city) => {\n    const data = await fetch(\n      `http://api.weatherstack.com/current?access_key=6f607064e89ae54c3a31a50296c0d2fe&query=${city}`\n    );\n    const resp = await data.json();\n    console.log(resp);\n    const respWeather = resp.current;\n    console.log(respWeather);\n\n    // setCityWeather([resp.current.temperature,resp.current.weather_descriptions[0]])\n    setCityWeather({\n      location: resp.location.name,\n      temp: respWeather.temperature,\n      feelsLike: respWeather.feelslike,\n      humidity: respWeather.humidity,\n      windSpeed: respWeather.wind_speed,\n      weatherDespcription: respWeather.weather_descriptions[0],\n      weatherIcon: respWeather.weather_icons[0],\n    });\n    console.log(\"cityWeather\", cityWeather);\n  };\n\n  //we get city name from input component and is passed to updateCity function as \"data\"\n  function updateCity(data) {\n    setSelectedCity(data);\n    cityDataFetch(selectedCity);\n    //fetches weather data from Api for specific city\n    console.log(selectedCity);\n    console.log(cityWeather);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>Hello!</h3>\n      </header>\n      <SearchBar updateCity={updateCity} cityName={selectedCity} setCityName={setSelectedCity}/>\n      <WeatherCard weatherData={cityWeather} />\n      {/* Weather card displays data in city weather object */}\n      <h1>weather forcast for </h1>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}